library(swirl)
swirl()
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z <- qnorm(.95)
pnorm(30+z, 30, lower.tail=FALSE)
pnorm(30+z, 32, lower.tail=FALSE)
pnorm(30+z, 32, 1, lower.tail=FALSE)
pnorm(30+z, 32, 2, lower.tail=FALSE)
pnorm(30+z*2, 32, 2, lower.tail=FALSE)
power.t.test(16,2/4,1,"one.sample", "one.sided")$power
power.t.test(16, 2/4, 1, type="one.sample", alt="one.sided")$power
power.t.test(16, 2, 4, type="one.sample", alt="one.sided")$power
power.t.test(16, 100, 200, type="one.sample", alt="one.sided")$power
power.t.test(.8,2/4,1,type="one.sample",alt="one.sided")$n
power.t.test(power=.8, delta=2/4, sd=1, type="one.sample",alt="one.sided")$n
power.t.test(power=.8, delta=2, sd=4, type="one.sample",alt="one.sided")$n
power.t.test(power=.8, delta=100, sd=200, type="one.sample",alt="one.sided")$n
power.t.test(power=.8, n=26, sd=200, type="one.sample",alt="one.sided")$n
power.t.test(power=.8, n=26, sd=1, type="one.sample",alt="one.sided")$n
power.t.test(power=.8, n=26, sd=1, type="one.sample",alt="one.sided")$delta
power.t.test(power=.8, n=27, sd=1, type="one.sample",alt="one.sided")$delta
library(swirl)
swirl()
pValues
head(pValues)
sum(pValues<0.05)
p.adjust(pValues,method="bonferroni")
sum(p.adjust(pValues,method="bonferroni")<0.05)
sum(p.adjust(pValues,method="BH")<0.05)
tail(trueStatus)
table(pValues2<0.05,trueStatus)
24/500
table(p.adjust(pValues2, method="bonferroni"),trueValues)
table(p.adjust(pValues2, method="bonferroni")<0.05,trueValues)
table(p.adjust(pValues2, method="bonferroni"),trueStatus)
table(p.adjust(pValues2, method="bonferroni")<0.05,trueStatus)
table(p.adjust(pValues2, method="BH")<0.05,trueStatus)
sum(1:6)/6
print(g2)
head(sh)
nh
median(resampledMedians)
median(sh)
sam <- sample(fh,nh*b,replace=TRUE)
sam <- sample(fh,nh*B,replace=TRUE)
resam <- matrix(sam,B,nh)
meds <- apply(resam,1,median)
fh-meds
median(meds)-median(fh)
sd(meds)
sd(resampledMedians)
quantile(resampledMedians,c(0.025,0.975))
quantile(meds,c(0.025,0.975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
BCcounts
group
testStat
obs <- testStat(BCcounts,group)
obs
mean(Bdata$count)-mean(Cdata$count)
sample(group)
perms <- sapply(1:10000, function(i) testStat(BCcounts,sample(group)))
perms>obs
mean(perms>obs)
testStat(DEcounts,group)
perms <- sapply(1:10000, function(i) testStat(DEcounts,sample(group)))
